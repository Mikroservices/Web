{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@typescript-eslint/naming-convention": [
            "error",
            // Default typescript name conventions.
            {
                "selector": "default",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            {
                "selector": "enumMember",
                "format": [
                    "PascalCase"
                ]
            },
            {
                "selector": "variable",
                "format": [
                    "camelCase",
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            },
            // Anonymous type properties can by camelCase and UPPER_CASE.
            {
                "selector": "objectLiteralProperty",
                "format": [
                    "camelCase",
                    "UPPER_CASE",
                    "PascalCase"
                ]
            },
            // Read only fields can be camelCase or PascalCase (e.g. enums).
            {
                "selector": "classProperty",
                "modifiers": [
                    "readonly"
                ],
                "format": [
                    "camelCase",
                    "PascalCase"
                ]
            }
        ],
        "@typescript-eslint/member-ordering": [
            "off"
        ],
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [
              "Component",
              "Page",
              "Dialog"
            ]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "arrow-body-style": [
            "error", 
            "as-needed",
            { "requireReturnForObjectLiteral": true }
        ],
        "arrow-parens": [
          "off",
          "always"
        ],
        "import/order": "error",
        "max-len": [
          "error",
          {
            "ignorePattern": "^import [^,]+ from |^export | implements",
            "code": 140
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
